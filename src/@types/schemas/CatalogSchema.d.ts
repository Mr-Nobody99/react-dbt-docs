/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * CatalogArtifact(metadata: dbt.contracts.results.CatalogMetadata, nodes: Dict[str, dbt.contracts.results.CatalogTable], sources: Dict[str, dbt.contracts.results.CatalogTable], errors: Union[List[str], NoneType] = None, _compile_results: Union[Any, NoneType] = None)
 */
interface CatalogSchema {
  metadata: CatalogMetadata;
  nodes: {
    [k: string]: CatalogTable;
  };
  sources: {
    [k: string]: CatalogTable;
  };
  errors?: string[] | null;
}
/**
 * CatalogMetadata(dbt_schema_version: str = <factory>, dbt_version: str = '0.20.0rc1', generated_at: datetime.datetime = <factory>, invocation_id: Union[str, NoneType] = <factory>, env: Dict[str, str] = <factory>)
 */
interface CatalogMetadata {
  dbt_schema_version?: string;
  dbt_version?: string;
  generated_at?: string;
  invocation_id?: string | null;
  env?: {
    [k: string]: string;
  };
}
/**
 * CatalogTable(metadata: dbt.contracts.results.TableMetadata, columns: Dict[str, dbt.contracts.results.ColumnMetadata], stats: Dict[str, dbt.contracts.results.StatsItem], unique_id: Union[str, NoneType] = None)
 */
interface CatalogTable {
  metadata: TableMetadata;
  columns: {
    [k: string]: ColumnMetadata;
  };
  stats: {
    [k: string]: StatsItem;
  };
  unique_id?: string | null;
}
/**
 * TableMetadata(type: str, schema: str, name: str, database: Union[str, NoneType] = None, comment: Union[str, NoneType] = None, owner: Union[str, NoneType] = None)
 */
interface TableMetadata {
  type: string;
  schema: string;
  name: string;
  database?: string | null;
  comment?: string | null;
  owner?: string | null;
}
/**
 * ColumnMetadata(type: str, index: int, name: str, comment: Union[str, NoneType] = None)
 */
interface ColumnMetadata {
  type: string;
  index: number;
  name: string;
  comment?: string | null;
}
/**
 * StatsItem(id: str, label: str, value: Union[bool, str, float, NoneType], include: bool, description: Union[str, NoneType] = None)
 */
interface StatsItem {
  id: string;
  label: string;
  value?: boolean | string | number | null;
  include: boolean;
  description?: string | null;
}
